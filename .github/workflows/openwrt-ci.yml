# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
  schedule:
    - cron: 0 21 * * *
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Download dependencies
      run: |
        git clone https://github.com/vernesong/OpenClash package/luci-app-openclash --no-checkout --depth=1
        cd package/luci-app-openclash
        git sparse-checkout init --cone
        git sparse-checkout set luci-app-openclash
        git checkout
        cd ../../

    - name: Update & Install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Download package
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: ./bin/targets/
